import Head from 'next/head'
import React from 'react'
import styles from '../styles/Common.module.css'
import { connectToDatabase } from '../util/mongodb'
import { signIn, signOut, useSession } from 'next-auth/client'
import { IoLogoFacebook, IoLogoInstagram } from 'react-icons/io'
import Countdown from 'react-countdown'

const Completionist = () => <span>You are good to go!</span>

const renderer = ({ days, hours, minutes, seconds, completed }) => {
  if (completed) {
    // Render a completed state
    return <Completionist />
  } else {
    // Render a countdown
    return (
      <span>
        {days} days, {hours} hours, {minutes}, minutes, {seconds} seconds left!
      </span>
    )
  }
}

export default function Home({ isConnected }) {
  const [session, loading] = useSession()

  return (
    <div className={styles.container}>
      <Head>
        <title>Cutie Hack</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body>
        <nav className={styles.navbar}>
            <div className={styles.tabs}>
              <a href='#'>Home</a>
              <a href='#'>About</a>
              <a href='#'>FAQ</a>
              <a href='#'>Help</a>
              <a href='#'>Sponsors</a>
            </div>
        </nav>
        <main className={styles.main}>
          <h3>
            <Countdown date="2021-10-31T00:00:00" renderer={renderer} />
          </h3>
          {/* {isConnected ? (
            <h2 className="subtitle">You are connected to MongoDB</h2>
          ) : (
            <h2 className="subtitle">
              You are NOT connected to MongoDB. Check the <code>README.md</code>{' '}
              for instructions.
            </h2>
          )}    */}

          {!session && (
            <>
              <h1>You are not signed in</h1> <br />
              <button onClick={signIn}>Sign in</button>
            </>
          )}
          {session && (
            <>
              <h1>Signed in as {session.user.name} </h1> <br />
              <h1 className={styles.subtitle}>Welcome to</h1>
              <h1 className={styles.title}>Cutie Hack</h1>
              <p className={styles.description}>Coming Soon...</p>
              <button onClick={signOut}>Sign out</button>
            </>
          )}

          <div className={styles.grid}>
            <a href="https://www.facebook.com/cutiehack/" className={styles.card}>
              <div className={styles.textIconWrapper}>
                <div>Facebook</div>
                <IoLogoFacebook className={styles.icon} />
              </div>
            </a>

            <a
              href="https://www.instagram.com/cutiehack_ucr/"
              className={styles.card}
            >
              <div className={styles.textIconWrapper}>
                <div>Instagram</div>
                <IoLogoInstagram className={styles.icon} />
              </div>
            </a>
          </div>
        </main>
      </body>

      <footer className={styles.footer}>
        Click the links above to learn more about us!
      </footer>
    </div>
  )
}

export async function getServerSideProps(context) {
  const { client } = await connectToDatabase()

  const isConnected = await client.isConnected()

  return {
    props: { isConnected },
  }
}
